---
- name: Create fixed-ip on OpenStack
  os_port:
    state: present
    name: "VIP for {{ keepalived_instance }}"
    network: "{{ keepalived_os_network }}"
    fixed_ips:
      - ip_address: "{{ keepalived_vip }}"
    security_groups: "{{ keepalived_os_security_groups }}"
  become: false
  run_once: true
  delegate_to: 127.0.0.1

- name: Check if floating-ip already assigned
  command: |
    neutron floatingip-list --fixed-ip-address="{{ keepalived_vip }}" \
    --format value -c id
  become: false
  run_once: true
  delegate_to: 127.0.0.1
  register: keepalived_is_floating_ip_assign
- name: Assign floating-ip to fixed-ip
  shell: |
    neutron floatingip-create \
    --port-id=$(neutron port-list --fixed-ips ip_address="{{ keepalived_vip }}" --format value -c id) \
    "{{ keepalived_os_external_network }}"
  become: false
  run_once: true
  delegate_to: 127.0.0.1
  when: |
    keepalived_os_assign_floating_ip and
    keepalived_os_external_network is defined and
    keepalived_is_floating_ip_assign.stdout == ""

# TODO Use os_floating_ip when this bug has been fixed
# https://github.com/ansible/ansible-modules-core/issues/4230
# - name: Assign floating-ip to fixed-ip
#   os_floating_ip:
#      state: present
#      reuse: yes
#      network: "{{ keepalived_os_external_network }}"
#      fixed_address: "{{ keepalived_vip }}"
#   become: false
#   run_once: true
#   delegate_to: 127.0.0.1
#   when: |
#     keepalived_os_assign_floating_ip and
#     keepalived_os_external_network is defined

- name: Get ports information
  command: neutron port-list --fixed-ips ip_address="{{ hostvars[item].ansible_host }}" --format value -c id
  become: false
  run_once: true
  delegate_to: 127.0.0.1
  when: item != 'localhost'
  with_items: "{{ groups[group_names[0]] }}"
  register: keepalived_os_ports

- name: Pair Keepalived instance to fixed-ip
  os_port:
    state: present
    network: "{{ keepalived_os_network }}"
    allowed_address_pairs:
      - ip_address: "{{ keepalived_vip }}"
    fixed_ips:
      - ip_address: "{{ hostvars[item.item].ansible_host }}"
    name: "{{ item.stdout }}"
  become: false
  run_once: true
  delegate_to: 127.0.0.1
  when: item.item != 'localhost'
  with_items: "{{ keepalived_os_ports.results }}"
